{"ast":null,"code":"var _jsxFileName = \"/Users/alexlarcheveque/Coding/Interview/rest-api/src/Calculations.js\";\nimport React from \"react\";\nimport axios from \"./API/axios\";\n\nclass Calculations extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstNum: \"\",\n      secondNum: \"\",\n      isLoaded: false\n    };\n\n    this.handleChange = event => {\n      let name = event.target.name;\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //Caculations we use to insert into the database through chained axios calls\n      //We chain the calls to make sure that we are updating ONLY the latest row insertion\n\n      const sum = Number(this.state.firstNum) + Number(this.state.secondNum);\n      const product = sum * 2;\n      const power = Math.pow(product, 2);\n      axios.get(\"/calculations/add\", {\n        params: {\n          first_num: this.state.firstNum,\n          second_num: this.state.secondNum,\n          sum_result: sum\n        }\n      }).then(() => {\n        return axios.get(\"/calculations/product\", {\n          params: {\n            product_result: product\n          }\n        }).then(() => {\n          return axios.get(\"/calculations/power\", {\n            params: {\n              power_result: power\n            }\n          }).then(() => {\n            this.setState({\n              isLoaded: true\n            });\n          });\n        });\n      });\n    };\n\n    this.displayForm = () => {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"First Number\",\n        name: \"firstNum\",\n        value: this.state.firstNum ? this.state.firstNum : \"\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"Second Number\",\n        name: \"secondNum\",\n        value: this.state.secondNum ? this.state.secondNum : \"\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Calculate\"))));\n    };\n\n    this.displayCalculations = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" hello world\"));\n    };\n\n    this.displaySpinner = () => {\n      return React.createElement(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Loading...\"));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.displayForm(), this.state.isLoaded ? this.displayCalculations() : this.displaySpinner());\n  }\n\n}\n\nexport default Calculations;","map":{"version":3,"sources":["/Users/alexlarcheveque/Coding/Interview/rest-api/src/Calculations.js"],"names":["React","axios","Calculations","Component","state","firstNum","secondNum","isLoaded","handleChange","event","name","target","setState","value","handleSubmit","preventDefault","sum","Number","product","power","Math","pow","get","params","first_num","second_num","sum_result","then","product_result","power_result","displayForm","displayCalculations","displaySpinner","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"./API/axios\";\n\nclass Calculations extends React.Component {\n  state = {\n    firstNum: \"\",\n    secondNum: \"\",\n    isLoaded: false\n  };\n\n  handleChange = event => {\n    let name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    //Caculations we use to insert into the database through chained axios calls\n    //We chain the calls to make sure that we are updating ONLY the latest row insertion\n    const sum = Number(this.state.firstNum) + Number(this.state.secondNum);\n    const product = sum * 2;\n    const power = Math.pow(product, 2);\n\n    axios\n      .get(\"/calculations/add\", {\n        params: {\n          first_num: this.state.firstNum,\n          second_num: this.state.secondNum,\n          sum_result: sum\n        }\n      })\n      .then(() => {\n        return axios\n          .get(\"/calculations/product\", {\n            params: {\n              product_result: product\n            }\n          })\n          .then(() => {\n            return axios\n              .get(\"/calculations/power\", {\n                params: {\n                  power_result: power\n                }\n              })\n              .then(() => {\n                this.setState({ isLoaded: true });\n              });\n          });\n      });\n  };\n\n  displayForm = () => {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-row\" id=\"container\">\n          <div className=\"col-5\">\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              placeholder=\"First Number\"\n              name=\"firstNum\"\n              value={this.state.firstNum ? this.state.firstNum : \"\"}\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n          <div className=\"col-5\">\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              placeholder=\"Second Number\"\n              name=\"secondNum\"\n              value={this.state.secondNum ? this.state.secondNum : \"\"}\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n          <div className=\"col-2\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Calculate\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  };\n\n  displayCalculations = () => {\n    return (\n      <div>\n        <h1> hello world</h1>\n      </div>\n    );\n  };\n\n  displaySpinner = () => {\n    return (\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.displayForm()}\n        {this.state.isLoaded\n          ? this.displayCalculations()\n          : this.displaySpinner()}\n      </div>\n    );\n  }\n}\n\nexport default Calculations;\n"]},"metadata":{},"sourceType":"module"}