{"ast":null,"code":"var _jsxFileName = \"/Users/alexlarcheveque/Coding/Interview/React-Node-Express-MySQL-RESTCalculations/React-App/src/Calculations.js\";\nimport React from \"react\";\nimport axios from \"./API/axios\";\nimport \"./Calculations.css\";\n\nclass Calculations extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstNum: \"\",\n      secondNum: \"\",\n      sum: \"\",\n      product: \"\",\n      power: \"\",\n      isSubmitted: false,\n      isLoaded: false\n    };\n\n    this.handleChange = event => {\n      let name = event.target.name;\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        isSubmitted: true\n      });\n      event.preventDefault(); //Caculations we use to insert into the database through chained axios calls\n      //We chain the calls to make sure that we are updating ONLY the latest row insertion\n\n      const sum = Number(this.state.firstNum) + Number(this.state.secondNum);\n      const product = sum * 2;\n      const power = Math.pow(product, 2);\n      this.setState({\n        sum,\n        product,\n        power\n      });\n      axios.get(\"/calculations/add\", {\n        params: {\n          first_num: this.state.firstNum,\n          second_num: this.state.secondNum,\n          sum_result: sum\n        }\n      }).then(() => {\n        return axios.get(\"/calculations/product\", {\n          params: {\n            product_result: product\n          }\n        }).then(() => {\n          return axios.get(\"/calculations/power\", {\n            params: {\n              power_result: power\n            }\n          }).then(() => {\n            this.setState({\n              isLoaded: true\n            });\n          });\n        });\n      });\n    };\n\n    this.displayForm = () => {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-row\",\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"First Number\",\n        name: \"firstNum\",\n        value: this.state.firstNum ? this.state.firstNum : \"\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        placeholder: \"Second Number\",\n        name: \"secondNum\",\n        value: this.state.secondNum ? this.state.secondNum : \"\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Calculate\"))));\n    };\n\n    this.displayCalculations = () => {\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Summing the numbers \", this.state.firstNum, \" + \", this.state.secondNum, \", we get \", this.state.sum)), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Multiplying \", this.state.sum, \" * 2, we get the product of\", \" \", this.state.product)), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Raising \", this.state.product, \" ^ 2, we get the result of\", \" \", this.state.power)), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header text-primary font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"The final answer = \", this.state.power)));\n    };\n\n    this.displaySpinner = () => {\n      return React.createElement(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Loading...\"));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.displayForm(), React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.state.isLoaded ? this.displayCalculations() : this.state.isSubmitted ? this.displaySpinner() : \"Please enter numbers to start calculations.\"));\n  }\n\n}\n\nexport default Calculations;","map":{"version":3,"sources":["/Users/alexlarcheveque/Coding/Interview/React-Node-Express-MySQL-RESTCalculations/React-App/src/Calculations.js"],"names":["React","axios","Calculations","Component","state","firstNum","secondNum","sum","product","power","isSubmitted","isLoaded","handleChange","event","name","target","setState","value","handleSubmit","preventDefault","Number","Math","pow","get","params","first_num","second_num","sum_result","then","product_result","power_result","displayForm","displayCalculations","displaySpinner","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"./API/axios\";\nimport \"./Calculations.css\";\n\nclass Calculations extends React.Component {\n  state = {\n    firstNum: \"\",\n    secondNum: \"\",\n    sum: \"\",\n    product: \"\",\n    power: \"\",\n    isSubmitted: false,\n    isLoaded: false\n  };\n\n  handleChange = event => {\n    let name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    this.setState({ isSubmitted: true });\n    event.preventDefault();\n\n    //Caculations we use to insert into the database through chained axios calls\n    //We chain the calls to make sure that we are updating ONLY the latest row insertion\n    const sum = Number(this.state.firstNum) + Number(this.state.secondNum);\n    const product = sum * 2;\n    const power = Math.pow(product, 2);\n    this.setState({ sum, product, power });\n\n    axios\n      .get(\"/calculations/add\", {\n        params: {\n          first_num: this.state.firstNum,\n          second_num: this.state.secondNum,\n          sum_result: sum\n        }\n      })\n      .then(() => {\n        return axios\n          .get(\"/calculations/product\", {\n            params: {\n              product_result: product\n            }\n          })\n          .then(() => {\n            return axios\n              .get(\"/calculations/power\", {\n                params: {\n                  power_result: power\n                }\n              })\n              .then(() => {\n                this.setState({ isLoaded: true });\n              });\n          });\n      });\n  };\n\n  displayForm = () => {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-row\" id=\"container\">\n          <div className=\"col-5\">\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              placeholder=\"First Number\"\n              name=\"firstNum\"\n              value={this.state.firstNum ? this.state.firstNum : \"\"}\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n          <div className=\"col-5\">\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              placeholder=\"Second Number\"\n              name=\"secondNum\"\n              value={this.state.secondNum ? this.state.secondNum : \"\"}\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n          <div className=\"col-2\">\n            <button type=\"submit\" className=\"btn btn-outline-primary\">\n              Calculate\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  };\n\n  displayCalculations = () => {\n    return (\n      <div className=\"card\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            Summing the numbers {this.state.firstNum} + {this.state.secondNum},\n            we get {this.state.sum}\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            Multiplying {this.state.sum} * 2, we get the product of{\" \"}\n            {this.state.product}\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            Raising {this.state.product} ^ 2, we get the result of{\" \"}\n            {this.state.power}\n          </div>\n        </div>\n        <div className=\"card\">\n          <div className=\"card-header text-primary font-weight-bold\">\n            The final answer = {this.state.power}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  displaySpinner = () => {\n    return (\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.displayForm()}\n        <div align=\"center\">\n          {this.state.isLoaded\n            ? this.displayCalculations()\n            : this.state.isSubmitted\n            ? this.displaySpinner()\n            : \"Please enter numbers to start calculations.\"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Calculations;\n"]},"metadata":{},"sourceType":"module"}